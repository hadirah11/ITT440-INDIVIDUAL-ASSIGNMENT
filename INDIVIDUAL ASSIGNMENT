#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/wait.h>
#include <sys/types.h>
#include <errno.h>

#define NUM_LENGTH 5
#define NUM_WAIT_INTERVAL 3

void getNUM(char num[NUM_LENGTH + 1]){

        srand(getpid() + getppid());

        num[0] = 49 + rand()% 7;

        for(int i = 1; i < NUM_LENGTH; i++){
                num[i] = 48 + rand() % 7;
        }

        num[NUM_LENGTH] = '\0';
}

void sigint_handler(int sig);
int main()
{
        signal(SIGINT, sigint_handler);

        while(1) {
                int pipefds[2];
                char num[NUM_LENGTH + 1];
                char buffer[NUM_LENGTH +1];
                char string[200];
                char s[200];

                pipe(pipefds);
                pid_t pid = fork();

                if(signal(SIGINT,sigint_handler) == SIG_ERR){
                        perror("signal");
                        exit(1);
        }

        if(pid == 0){
                getNUM(num);
                close(pipefds[0]);
                write(pipefds[1], num, NUM_LENGTH + 1);

                printf("Please enter your favourite cake:\n");
                fgets(string, 200, stdin);
                printf("This is your favourite cake : %s", string);
                printf("Generating Number in parent and sending to child....\n");

                sleep(NUM_WAIT_INTERVAL);

                exit(EXIT_SUCCESS);
        }

        if(pid > 0){
                wait(NULL);

                close(pipefds[1]);
                read(pipefds[0], buffer, NUM_LENGTH + 1);

                printf("Child received Number '%s' from parent....\n\n", buffer);
        }
}

return EXIT_SUCCESS;
}

void sigint_handler(int sig){
        printf("------Process was Interrupted!!!-------\n");
        exit(1);
}
